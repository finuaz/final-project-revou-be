"""changing structure for ingredients

Revision ID: 0e52461c0957
Revises: 54620f037705
Create Date: 2024-05-03 23:09:10.523120

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0e52461c0957'
down_revision = '54620f037705'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Ingredient_group')
    op.drop_table('Group')
    with op.batch_alter_table('Ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ingredient_name', sa.String(length=40), nullable=False))
        batch_op.add_column(sa.Column('ingredient_unit', sa.String(length=10), nullable=False))
        batch_op.add_column(sa.Column('ingredient_image', sa.String(), nullable=True))
        batch_op.drop_column('ingredient')
        batch_op.drop_column('unit')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('ingredient', sa.VARCHAR(length=40), autoincrement=False, nullable=False))
        batch_op.drop_column('ingredient_image')
        batch_op.drop_column('ingredient_unit')
        batch_op.drop_column('ingredient_name')

    op.create_table('Group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Group_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('group', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Group_pkey'),
    sa.UniqueConstraint('group', name='Group_group_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Ingredient_group',
    sa.Column('ingredient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['Group.id'], name='Ingredient_group_group_id_fkey'),
    sa.ForeignKeyConstraint(['ingredient_id'], ['Ingredient.id'], name='Ingredient_group_ingredient_id_fkey'),
    sa.PrimaryKeyConstraint('ingredient_id', 'group_id', name='Ingredient_group_pkey')
    )
    # ### end Alembic commands ###
